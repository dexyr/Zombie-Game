<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hitscan</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init

life = 120;

speed_mult = 10;

x_speed = 0;
y_speed = 0;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///collision

//Check if the trajectory is even colliding with anything

if collision_line(x, y, x + x_speed, y + y_speed, obj_zombo, false, false) != noone
{

    var col_step = 0;
    var col_obj = noone;
    
    //5 Step Collision Check to find the first object
    
    for (i = 1; i &lt; 6; i++)
    {
        col_step = (i / 5);
        col_obj = instance_place(x + (x_speed * col_step), y + (y_speed * col_step), obj_zombo);
    
        if col_obj != noone
        {
            i = 6;
        }
    }
    
    //If there is a collision
    
    if col_obj != noone
    {
        //do 1 damage
        
        col_obj.hp--;
        
        //line collision to check headshot
        
        if collision_line(x, y, x + (x_speed * 2), y + (y_speed * 2), col_obj.head, false, false) != noone
        {
            //do one more damage
            
            col_obj.hp--;
            
            var mark = instance_create(col_obj.head.x + irandom(4) - 2, col_obj.head.y + irandom(4) - 2, obj_hit_mark);
            mark.sprite_index = spr_hit_mark_crit;
        }
        else
        {
            var mark = instance_create(x + (x_speed * col_step), y + (y_speed * col_step), obj_hit_mark);
            mark.sprite_index = spr_hit_mark;
        }
        
        mark.image_angle = irandom(360);
        
        //deleto
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement and life

x = x + x_speed;
y = y + y_speed;

life--;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.show_hitboxes
{
    draw_set_color(c_yellow);
    draw_rectangle(bbox_left, bbox_top, bbox_right, bbox_bottom, true);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
